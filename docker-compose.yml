version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: dev.Dockerfile
    volumes:
      - .:/usr/src/app
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_POLLINTERVAL=1000
      - NODE_ENV=development
    command: sh -c "npm run migration:run && npm run start:dev"
    depends_on:
      - redis
      - db

  db:
    image: postgres:15-alpine
    container_name: myapp-postgres
    ports:
      - "3001:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${DB_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: myapp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  redis-data:
